import datetime
import PyUber, PyUber.client
import numpy as np
import pandas as pd
from datetime import datetime, timedelta

#SETUP Data source value
Data_source = 'Data Source'

# SQL query
query_string = """
SELECT 
       *** -- Company sensitive information removed from the query     
FROM flf
LEFT JOIN 
    (SELECT * FROM OPER
    WHERE PROCESS = '0000' ) CT ON flf.operation = CT.operation
LEFT JOIN A ON flf.LOT = A.LOT
WHERE flf.history_deleted_flag = 'N' 
and flf.LOT in
      (
      *** -- Company sensitive information removed from the query   
      )
ORDER BY flf.EXEC_SEQ
"""

#Query run
conn = PyUber.connect(datasource=Data_source, TimeOutInSeconds=6000)

# Data fram creation
DataOut = pd.read_sql_query(query_string, conn)

#connection close
conn.close()

# CT Calc part 1 - Filter lots with no out date
DataOut = DataOut[DataOut['OUT_DATE'].isnull()]

# CT Calc part 2 - Correctly sort the list in process flow sequence
DataOut = DataOut.sort_values(by=['LOT', 'EXEC_SEQ'])

# CT Calc part 3 - Calculate the total CT where lots don't have out date
total_plan_cycle_time = DataOut.groupby('LOT')['PLAN_CYCLE_TIME'].sum().reset_index()
total_plan_cycle_time.rename(columns={'PLAN_CYCLE_TIME': 'PLAN_CYCLE_TIME_Total'}, inplace=True)

# Identify current operation with no outdate yet (name as first_operation)
first_operation = DataOut.drop_duplicates(subset='LOT', keep='first')

# Merge the total_plan_cycle_time back to the first_operation DataFrame
result_df = first_operation.merge(total_plan_cycle_time, on='LOT')

# Check:
# print(result_df.columns)

