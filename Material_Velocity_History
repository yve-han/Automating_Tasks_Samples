import datetime
import PyUber, PyUber.client
import numpy as np
import pandas as pd

#SETUP VALUES
Data_source = 'Data'

# Define the SQL query
query_string = """
-- Identify the latest operation for each lot:
WITH LatestOperation AS (
    SELECT
        *** -- Company sensitive information removed from the query   
    FROM
        RC
    GROUP BY
        RC.LOT
),

-- Aggregate data at the lot level:
LotData AS (
    SELECT
       *** -- Company sensitive information removed from the query   
    FROM
       RC
    JOIN 
       O ON RC.OPERATION = O.OPERATION
    WHERE
     *** -- Company sensitive information removed from the query   
    GROUP BY
        RC.LOT, RC.PRODUCT
),

-- Get the latest OUT_WW for each lot:
LatestOutWW AS (
    SELECT
      *** -- Company sensitive information removed from the query   
    FROM
        RC
    JOIN
        LatestOperation LO ON RC.LOT = LO.LOT AND RC.EXEC_SEQ = LO.LATEST_EXEC_SEQ
)

-- Main query to combine the results and calculate DPML values:
SELECT
*** -- Company sensitive information removed from the query   
FROM
    LotData LD
JOIN
    LatestOutWW LOWW ON LD.LOT = LOWW.LOT
ORDER BY
    LD.MASK_LAYER_COUNT DESC; 
    """

#run query
conn = PyUber.connect(datasource=Data_source, TimeOutInSeconds = 6000)

#save query output as dataframe
DataOut = pd.read_sql_query(query_string, conn)

# Close the database connection
conn.close()

# Filter out "NULL" rows from DPML_TOTAL or DPML_NO_STORES columns
df_filtered = DataOut.dropna(subset=['DPML_TOTAL', 'DPML_NO_STORES'], how='all')

# Calculate statistics for DPML_TOTAL:
dpml_total_mean = df_filtered['DPML_TOTAL'].mean()
dpml_total_95th_percentile = np.percentile(df_filtered['DPML_TOTAL'].dropna(), 95)
dpml_total_median = df_filtered['DPML_TOTAL'].median()
dpml_total_50th_percentile = np.percentile(df_filtered['DPML_TOTAL'].dropna(), 50)

# Calculate statistics for DPML_NO_STORES:
dpml_no_stores_mean = df_filtered['DPML_NO_STORES'].mean()
dpml_no_stores_95th_percentile = np.percentile(df_filtered['DPML_NO_STORES'].dropna(), 95)
dpml_no_stores_median = df_filtered['DPML_NO_STORES'].median()
dpml_no_stores_50th_percentile = np.percentile(df_filtered['DPML_NO_STORES'].dropna(), 50)


# PowerBI DataFrame Store:
stats_df = pd.DataFrame({
    'Statistic': ['Mean', 'Median','50th Percentile','95th Percentile'],
    'DPML_TOTAL': [dpml_total_mean, dpml_total_median, dpml_total_50th_percentile, dpml_total_95th_percentile],
    'DPML_NO_STORES': [dpml_no_stores_mean, dpml_no_stores_50th_percentile , dpml_no_stores_median, dpml_no_stores_95th_percentile]
})

# Formating to show upto 2 decimal places:
stats_df['DPML_TOTAL'] = stats_df['DPML_TOTAL'].round(2)
stats_df['DPML_NO_STORES'] = stats_df['DPML_NO_STORES'].round(2)

# Output the statistics DataFrame - Power BI
print(stats_df)
